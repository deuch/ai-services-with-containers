{{- if .Values.ingress.autoGenerate }}
{{- $tlsSecret:= lookup "v1" "Secret" .Release.Namespace .Values.ingress.tlsSecret }}
{{- if empty $tlsSecret}}
{{- $ca := genCA "aiservices-ca" 365 }}
{{- $cert := genSignedCert (printf "%s%s" "*." .Values.ingress.tlsDomain) nil (list (printf "%s%s" "*." .Values.ingress.tlsDomain)) 365 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.ingress.tlsSecret }}
type: kubernetes.io/tls
data:
  tls.crt: {{printf "%s%s" $cert.Cert $ca.Cert | b64enc}}
  tls.key: {{$cert.Key | b64enc}}
{{- else}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.ingress.tlsSecret }}
type: kubernetes.io/tls
data:
  tls.crt: {{get $tlsSecret.data "tls.crt"| quote}}
  tls.key: {{get $tlsSecret.data "tls.key"| quote}}
{{- end }}
{{- end }}
{{- if and .Values.ingress.existingSecret (not .Values.ingress.autoGenerate) }}
{{- $cert:= lookup "v1" "Secret" .Values.ingress.existingSecretNamespace .Values.ingress.existingSecret }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.ingress.tlsSecret }}
type: kubernetes.io/tls
data:
  tls.crt: {{get $cert.data "tls.crt"| quote}}
  tls.key: {{get $cert.data "tls.key"| quote}}
{{- end }}
{{- if and (not (empty .Values.ingress.tls.certificate)) (not (empty .Values.ingress.tls.key)) (not .Values.ingress.existingSecret) (not .Values.ingress.autoGenerate) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .Files.Get .Values.ingress.tls.certificate | b64enc }}
  tls.key: {{ .Files.Get .Values.ingress.tls.key | b64enc }}
{{- end}}